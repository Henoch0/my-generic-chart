apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{ include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    type: {{ .Values.deployment.strategy.type }}
  template:
    metadata:
      labels: {{ include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      automountServiceAccountToken: {{ .Values.deployment.automountServiceAccountToken }}
      imagePullSecrets:
        {{- range .Values.deployment.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      securityContext: 
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
        {{- range .Values.containers }}
        - name: {{ include "container.name" (dict "Chart" $.Chart "Release" $.Release "image" .image "name" .name) }}
          image: {{- $registry := default "docker.io" $.Values.global.imageRegistry }}
                 {{- with .image }}
                 "{{ printf "%s/%s:%s" $registry .repository .tag }}"
                 {{- end }}
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          env:
            {{- toYaml .env | nindent 12 }}
          args:
            {{- toYaml .args | nindent 12 }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
        {{- end }}
      volumes:
        {{- range .Values.deployment.volumes }}
        - name: {{ .name }}
          {{- if eq .type "configMap" }}
          configMap:
            name: {{ .configMap.name }}
          {{- else if eq .type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
          {{- end }}
        {{- end }}
