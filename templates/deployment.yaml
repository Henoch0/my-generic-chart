{{- $root := . -}}
{{- range .Values.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" $root.Release.Name (include "common.names.fullname" $root) | trunc 63 | trimSuffix "-" }}
  labels: {{ include "common.labels.standard" $root | nindent 4 }}
spec:
  replicas: {{ .replicaCount | default $root.Values.defaults.replicaCount }}
  minReadySeconds: {{ .minReadySeconds | default $root.Values.defaults.minReadySeconds }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.fullname" $root }}
      app.kubernetes.io/instance: {{ $root.Release.Name }}
  strategy:
    {{- if .strategy }}
    type: {{ .strategy.type | default $root.Values.defaults.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .strategy.rollingUpdate.maxSurge | default $root.Values.defaults.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .strategy.rollingUpdate.maxUnavailable | default $root.Values.defaults.strategy.rollingUpdate.maxUnavailable }}
    {{- else }}
    type: {{ $root.Values.defaults.strategy.type }}
    rollingUpdate:
      maxSurge: {{ $root.Values.defaults.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ $root.Values.defaults.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels: {{ include "common.labels.matchLabels" $root | nindent 8 }}
    spec:
      serviceAccountName: {{ .serviceAccountName | default $root.Values.defaults.serviceAccountName }}
      automountServiceAccountToken: {{ .automountServiceAccountToken | default $root.Values.defaults.automountServiceAccountToken }}
      imagePullSecrets:
        {{- if .imagePullSecrets }}
        {{- toYaml .imagePullSecrets | nindent 10 }}
        {{- else }}
        {{- toYaml $root.Values.defaults.imagePullSecrets | nindent 10 }}
        {{- end }}
      securityContext:
        fsGroup: {{ .securityContext.fsGroup | default $root.Values.defaults.securityContext.fsGroup }}
      containers:
        {{- range .containers }}
        - name: {{ include "container.name" (dict "Chart" $.Chart "Release" $.Release "Values" .) }}
          image: {{ $registry := default "docker.io" $.Values.global.imageRegistry }}
                {{ $image := .image | default (index $.Values.defaults.containers 0).image }}
                {{ printf "%s/%s:%s" $registry $image.repository $image.tag }}
          imagePullPolicy: {{ .image.pullPolicy | default (index $.Values.defaults.containers 0).image.pullPolicy }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          env:
            {{- toYaml .env | nindent 12 }}
          args:
            {{- toYaml .args | nindent 12 }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
        {{- end }}
      volumes:
        {{- if .volumes }}
        {{- toYaml .volumes | nindent 8 }}
        {{- else }}
        {{- toYaml $.Values.defaults.volumes | nindent 8 }}
        {{- end }}
{{- end }}