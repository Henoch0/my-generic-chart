{{- range .Values.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . | default (include "common.names.fullname" $.Values.defaults) }}
  labels: {{ include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .replicaCount | default $.Values.defaults.replicaCount }}
  minReadySeconds: {{ .minReadySeconds | default $.Values.defaults.minReadySeconds }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .strategy.rollingUpdate.maxSurge | default $.Values.defaults.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .strategy.rollingUpdate.maxUnavailable | default $.Values.defaults.strategy.rollingUpdate.maxUnavailable }}
    type: {{ .strategy.type | default $.Values.defaults.strategy.type }}
  template:
    metadata:
      labels: {{ include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .serviceAccountName | default $.Values.defaults.serviceAccountName }}
      automountServiceAccountToken: {{ .automountServiceAccountToken | default $.Values.defaults.automountServiceAccountToken }}
      imagePullSecrets:
        {{- if .imagePullSecrets }}
        {{- range .imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
        {{- else }}
        {{- range $.Values.defaults.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
        {{- end }}
      securityContext:
        fsGroup: {{ .securityContext.fsGroup | default $.Values.defaults.securityContext.fsGroup }}
      containers:
        {{- range .containers }}
        - name: {{ include "container.name" (dict "Chart" $.Chart "name" .name "image" .image) }}
          image: {{- $registry := default "docker.io" $.Values.global.imageRegistry }}
                {{- $image := default $.Values.defaults.containers.0.image .image }}
                "{{ printf "%s/%s:%s" $registry $image.repository $image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy | default $.Values.defaults.containers.0.image.pullPolicy }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          env:
            {{- toYaml .env | nindent 12 }}
          args:
            {{- toYaml .args | nindent 12 }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
        {{- end }}
      volumes:
        {{- if .volumes }}
        {{- range .volumes }}
        - name: {{ .name }}
          {{- if eq .type "configMap" }}
          configMap:
            name: {{ .configMap.name }}
          {{- else if eq .type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
          {{- end }}
        {{- end }}
        {{- else }}
        {{- range $.Values.defaults.volumes }}
        - name: {{ .name }}
        {{- end }}
        {{- end }}
{{- end }}
